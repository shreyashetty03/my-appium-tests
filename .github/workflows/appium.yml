name: Appium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Appium and driver
        run: |
          npm install -g appium@v2.18.0
          echo "$(npm bin -g)" >> $GITHUB_PATH
          appium -v
          appium driver install uiautomator2

      - name: Set up Android Emulator
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator" "system-images;android-31;google_apis;x86_64"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n testEmulator -k "system-images;android-31;google_apis;x86_64" -d "pixel"
          mkdir -p $HOME/.android/avd
          ls -l $HOME/.android/avd

      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd testEmulator -no-audio -no-window -no-boot-anim -gpu swiftshader_indirect -no-snapshot-save &
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          echo "Waiting for emulator to boot..."
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            sleep 10
            boot_completed=$(adb -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "boot_completed = $boot_completed"
          done
          echo "âœ… Emulator booted."

      - name: Start Appium
        run: |
          nohup appium --port 4725 > appium.log 2>&1 &
          sleep 10

      - name: Run Tests
        run: node test3.js
